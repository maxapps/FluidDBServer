package com.maxapps.fluiddb {
	import flash.events.Event;
	import flash.net.URLLoader;
	
	/**
	 * Event generated by FluidDBService for non-error triggered events.
	 * 
	 * Contains an instance of FluidDBAction for any event triggered by a call to the FluidDB API.
	 * 
	 * @see	FluidDBAction
	 * @see	FluidDBService
	 */
	public class FluidDBEvent extends Event {

		// STATIC --------------------------------------------------------------------------------------
		
		public static const COMPLETE:String	= "complete";
	
		
		/**
		 * Constructor()
		 * 
		 * @param	sType			Type of event.
		 * @param	mdlAct		[null] The FluidDBAction instance created by the FluidDBService method 
		 * 									which initiated a call to the FluidDB API.
		 * @param	urlLoad		[null] The URLLoader used by FluidDBService to call the API.
		 * 
		 * @see	FluidDBAction
		 * @see	FluidDBService
		 * @see	flash.net.URLLoader
		 */
		public function FluidDBEvent(sType:String, mdlAct:FluidDBAction=null, urlLoad:URLLoader=null) {
			super(sType);
			
			_action = mdlAct;
			if (urlLoad && urlLoad.data && mdlAct) {
				_action.response = urlLoad.data as String;
			}
		}


		// PUBLIC --------------------------------------------------------------------------------------
		
		/**
		 * Instance of FluidDBAction for accessing information about a call to the FluidDB API.
		 * 
		 * @see	FluidDBAction
		 */
		public function get action():FluidDBAction {
			return _action;
		}
		public function set action(mdlVal:FluidDBAction):void {
			_action = mdlVal;
		}
		
		
		/**
		 * Just a convenient way to access any payload returned by the API call.
		 */
		public function get response():String {
			return (_action) ? _action.response : "";
		}


		// PROTECTED -----------------------------------------------------------------------------------
		
		// PRIVATE -------------------------------------------------------------------------------------
		
		private var _action:FluidDBAction;
		
	}
}